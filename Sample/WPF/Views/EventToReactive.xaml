<Window x:Class="WPF.Views.EventToReactive"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:WPF.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:r="clr-namespace:Codeplex.Reactive.Interactivity;assembly=ReactiveProperty.NET40"
        Title="EventToReactive" Height="300" Width="300">
    <Window.DataContext>
        <vm:EventToReactiveViewModel />
    </Window.DataContext>
    <!-- recommend App.xaml.cs global resource -->
    <Window.Resources>
        <vm:Converters x:Key="Converters" />
    </Window.Resources>

    <Grid>
        <!-- Use Blend SDK's Interaction Trigger -->
        <!-- Event binding to ReactiveProperty -->
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseMove">
                <!-- ConvertBack function is Func<object, object>-->
                <r:EventToReactive ReactiveProperty="{Binding MouseMove}" 
                                   Converter="{Binding MouseEventToPoint, Source={StaticResource Converters}}" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseDown">
                <!-- direct event bind -->
                <r:EventToReactive ReactiveProperty="{Binding MouseDown}" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseEnter">
                <!-- IgnoreEventArgs = true send Unit -->
                <r:EventToReactive ReactiveProperty="{Binding MouseEnter}" IgnoreEventArgs="true" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <TextBlock Text="{Binding CurrentPoint.Value}" />
        <TextBlock Text="{Binding Entered.Value}" Margin="0,100,0,0" />
    </Grid>
</Window>