<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ReactiveProperty.Moles</name>
    </assembly>
    <members>
        <member name="T:Codeplex.Reactive.Moles.MEventToReactive">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.EventToReactive"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MEventToReactive.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MEventToReactive.#ctor(Codeplex.Reactive.EventToReactive)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MEventToReactive.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MEventToReactive.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MEventToReactive.Bind(System.Windows.Media.Animation.IAnimatable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MEventToReactive.Bind(System.Windows.Interactivity.IAttachedObject)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.Constructor">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.EventToReactive.#ctor"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.InvokeObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.EventToReactive.Invoke(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.ReactivePropertyGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.EventToReactive.ReactiveProperty"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.ReactivePropertySetIReactivePropertyOfObject">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.EventToReactive.ReactiveProperty"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MEventToReactive.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.AllInstances.InvokeObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.EventToReactive.Invoke(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.AllInstances.ReactivePropertyGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.EventToReactive.ReactiveProperty"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MEventToReactive.AllInstances.ReactivePropertySetIReactivePropertyOfObject">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.EventToReactive.ReactiveProperty"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Extensions.Moles.MINotifyCollectionChangedExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Extensions.INotifyCollectionChangedExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyCollectionChangedExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyCollectionChangedExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyCollectionChangedExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyCollectionChangedExtensions.CollectionChangedAsObservableT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.IObservable{System.Collections.Specialized.NotifyCollectionChangedEventArgs}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Extensions.INotifyCollectionChangedExtensions.CollectionChangedAsObservable``1(``0)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyCollectionChangedExtensions._CollectionChangedAsObservableb__0ActionOfNotifyCollectionChangedEventArgs``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Action{System.Collections.Specialized.NotifyCollectionChangedEventArgs},System.Collections.Specialized.NotifyCollectionChangedEventHandler})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Extensions.INotifyCollectionChangedExtensions.&lt;CollectionChangedAsObservable&gt;b__0``1(System.Action`1{System.Collections.Specialized.NotifyCollectionChangedEventArgs})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Extensions.Moles.MINotifyCollectionChangedExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Extensions.INotifyPropertyChangedExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions.ObservePropertyTSubjectExpressionOfFuncOfTSubjectTProperty``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.IObservable{``1}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Extensions.INotifyPropertyChangedExtensions.ObserveProperty``2(``0,System.Linq.Expressions.Expression`1{System.Func`2{``0,``1}})"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions.PropertyChangedAsObservableT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.IObservable{System.ComponentModel.PropertyChangedEventArgs}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Extensions.INotifyPropertyChangedExtensions.PropertyChangedAsObservable``1(``0)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions._PropertyChangedAsObservableb__0ActionOfPropertyChangedEventArgs``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Action{System.ComponentModel.PropertyChangedEventArgs},System.ComponentModel.PropertyChangedEventHandler})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Extensions.INotifyPropertyChangedExtensions.&lt;PropertyChangedAsObservable&gt;b__0``1(System.Action`1{System.ComponentModel.PropertyChangedEventArgs})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Extensions.Moles.MINotifyPropertyChangedExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Asynchronous.ProgressStatus"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.#ctor(Codeplex.Reactive.Asynchronous.ProgressStatus)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.ConstructorInt64Int64">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.ProgressStatus.#ctor(System.Int64,System.Int64)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.CurrentLengthGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.CurrentLength"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.CurrentLengthSetInt64">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.CurrentLength"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.PercentageGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.Percentage"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.ToString">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.ProgressStatus.ToString"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.TotalLengthGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.TotalLength"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.TotalLengthSetInt64">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.TotalLength"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.AllInstances.CurrentLengthGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.CurrentLength"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.AllInstances.CurrentLengthSetInt64">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.CurrentLength"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.AllInstances.PercentageGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.Percentage"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.ProgressStatus.ToString"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.AllInstances.TotalLengthGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.TotalLength"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MProgressStatus.AllInstances.TotalLengthSetInt64">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Asynchronous.ProgressStatus.TotalLength"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactiveCollection`1">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.ReactiveCollection`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.#ctor(Codeplex.Reactive.ReactiveCollection{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1.ConstructorIObservableOfTBoolean">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.#ctor(System.IObservable`1{`1},System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1.Dispose">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.Dispose"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1._n__FabricatedMethod4NotifyCollectionChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.&lt;&gt;n__FabricatedMethod4(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactiveCollection`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1.AllInstances.Dispose">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.Dispose"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1.AllInstances.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollection`1.AllInstances._n__FabricatedMethod4NotifyCollectionChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.&lt;&gt;n__FabricatedMethod4(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactiveCollectionObservableExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.ReactiveCollectionObservableExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollectionObservableExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollectionObservableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollectionObservableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCollectionObservableExtensions.ToReactiveCollectionIObservableOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.IObservable{``0},System.Boolean,Codeplex.Reactive.ReactiveCollection{``0}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCollectionObservableExtensions.ToReactiveCollection``1(System.IObservable`1{``0},System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCollectionObservableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactiveCommand`1">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.ReactiveCommand`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCommand`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCommand`1.#ctor(Codeplex.Reactive.ReactiveCommand{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCommand`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCommand`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCommand`1.Bind(System.Windows.Input.ICommand)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCommand`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveCommand`1.Bind(System.IObservable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.CanExecuteChangedAddEventHandler">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.add_CanExecuteChanged(System.EventHandler)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.CanExecuteChangedRemoveEventHandler">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.remove_CanExecuteChanged(System.EventHandler)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.CanExecuteObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.CanExecute(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.Constructor">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.ConstructorFuncOfTBoolean">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.#ctor(System.Func`2{`1,System.Boolean})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.Dispose">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.Dispose"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.ExecuteObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.Execute(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.RaiseCanExecuteChanged">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.RaiseCanExecuteChanged"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.SubscribeIObserverOfT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.Subscribe(System.IObserver`1{`1})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances.CanExecuteChangedAddEventHandler">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.add_CanExecuteChanged(System.EventHandler)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances.CanExecuteChangedRemoveEventHandler">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.remove_CanExecuteChanged(System.EventHandler)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances.CanExecuteObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.CanExecute(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances.Dispose">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.Dispose"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances.ExecuteObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.Execute(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances.RaiseCanExecuteChanged">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.RaiseCanExecuteChanged"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveCommand`1.AllInstances.SubscribeIObserverOfT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveCommand`1.Subscribe(System.IObserver`1{`1})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactiveProperty`1">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.ReactiveProperty`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.#ctor(Codeplex.Reactive.ReactiveProperty{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.Bind(GalaSoft.MvvmLight.ICleanup)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.Bind(Codeplex.Reactive.IReactiveProperty{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactiveProperty`1.Bind(System.IObservable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.Cleanup">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Cleanup"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ConstructorActionOfTTReactivePropertyMode">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.#ctor(System.Action`1{`1},`1,Codeplex.Reactive.ReactivePropertyMode)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ConstructorIObservableOfTActionOfTTReactivePropertyMode">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.#ctor(System.IObservable`1{`1},System.Action`1{`1},`1,Codeplex.Reactive.ReactivePropertyMode)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ConstructorIObservableOfTTReactivePropertyMode">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.#ctor(System.IObservable`1{`1},`1,Codeplex.Reactive.ReactivePropertyMode)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ConstructorTReactivePropertyMode">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.#ctor(`1,Codeplex.Reactive.ReactivePropertyMode)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.SubscribeIObserverOfT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Subscribe(System.IObserver`1{`1})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ValueCodeplexReactiveIReactivePropertyTget">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Codeplex.Reactive.IReactiveProperty&lt;T&gt;.get_Value"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ValueCodeplexReactiveIReactivePropertyTsetObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Codeplex.Reactive.IReactiveProperty&lt;T&gt;.set_Value(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ValueGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.ReactiveProperty`1.Value"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.ValueSetT">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.ReactiveProperty`1.Value"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactiveProperty`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.AllInstances.Cleanup">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Cleanup"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.AllInstances.SubscribeIObserverOfT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Subscribe(System.IObserver`1{`1})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.AllInstances.ValueCodeplexReactiveIReactivePropertyTget">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Codeplex.Reactive.IReactiveProperty&lt;T&gt;.get_Value"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.AllInstances.ValueCodeplexReactiveIReactivePropertyTsetObject">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Codeplex.Reactive.IReactiveProperty&lt;T&gt;.set_Value(System.Object)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.ReactiveProperty`1.Value"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactiveProperty`1.AllInstances.ValueSetT">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.ReactiveProperty`1.Value"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MReactivePropertyObservableExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.ReactivePropertyObservableExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactivePropertyObservableExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactivePropertyObservableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactivePropertyObservableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactivePropertyObservableExtensions.ToReactivePropertyIObservableOfTActionOfTTReactivePropertyMode``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.IObservable{``0},System.Action{``0},``0,Codeplex.Reactive.ReactivePropertyMode,Codeplex.Reactive.ReactiveProperty{``0}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactivePropertyObservableExtensions.ToReactiveProperty``1(System.IObservable`1{``0},System.Action`1{``0},``0,Codeplex.Reactive.ReactivePropertyMode)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MReactivePropertyObservableExtensions.ToReactivePropertyIObservableOfTTReactivePropertyMode``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.IObservable{``0},``0,Codeplex.Reactive.ReactivePropertyMode,Codeplex.Reactive.ReactiveProperty{``0}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.ReactivePropertyObservableExtensions.ToReactiveProperty``1(System.IObservable`1{``0},``0,Codeplex.Reactive.ReactivePropertyMode)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MReactivePropertyObservableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Notifier.ScheduledNotifier`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.#ctor(Codeplex.Reactive.Notifier.ScheduledNotifier{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.Bind(Codeplex.Reactive.Notifier.IProgress{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.Bind(System.IObservable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.Constructor">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.ConstructorIScheduler">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.#ctor(System.Reactive.Concurrency.IScheduler)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.ReportT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Report(`1)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.ReportTDateTimeOffset">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Report(`1,System.DateTimeOffset)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.ReportTTimeSpan">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Report(`1,System.TimeSpan)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.SubscribeIObserverOfT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Subscribe(System.IObserver`1{`1})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.AllInstances.ReportT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Report(`1)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.AllInstances.ReportTDateTimeOffset">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Report(`1,System.DateTimeOffset)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.AllInstances.ReportTTimeSpan">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Report(`1,System.TimeSpan)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MScheduledNotifier`1.AllInstances.SubscribeIObserverOfT">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.ScheduledNotifier`1.Subscribe(System.IObserver`1{`1})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Notifier.Moles.MSignalNotifier">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Notifier.SignalNotifier"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.#ctor(Codeplex.Reactive.Notifier.SignalNotifier)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.Bind(System.IObservable{Codeplex.Reactive.Notifier.SignalChangedStatus})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.SignalNotifier.#ctor(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.CountGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Notifier.SignalNotifier.Count"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.CountSetInt32">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Notifier.SignalNotifier.Count"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.DecrementInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.SignalNotifier.Decrement(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.IncrementInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.SignalNotifier.Increment(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.MaxGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Notifier.SignalNotifier.Max"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.SubscribeIObserverOfSignalChangedStatus">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.SignalNotifier.Subscribe(System.IObserver`1{Codeplex.Reactive.Notifier.SignalChangedStatus})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.AllInstances.CountGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Notifier.SignalNotifier.Count"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.AllInstances.CountSetInt32">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Notifier.SignalNotifier.Count"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.AllInstances.DecrementInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.SignalNotifier.Decrement(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.AllInstances.IncrementInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.SignalNotifier.Increment(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.AllInstances.MaxGet">
            <summary>Sets the mole of <see cref="P:Codeplex.Reactive.Notifier.SignalNotifier.Max"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.MSignalNotifier.AllInstances.SubscribeIObserverOfSignalChangedStatus">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Notifier.SignalNotifier.Subscribe(System.IObserver`1{Codeplex.Reactive.Notifier.SignalChangedStatus})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Asynchronous.StreamExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.ReadAsObservableStreamByteArrayInt32Int32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.ReadAsObservable(System.IO.Stream,System.Byte[],System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.ReadAsyncCoreStreamIProgressOfProgressStatusInt32Int32Boolean">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.ReadAsyncCore(System.IO.Stream,Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus},System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.ReadAsyncStreamIProgressOfProgressStatusInt32Int32Boolean">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.ReadAsync(System.IO.Stream,Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus},System.Int32,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.ReadAsyncStreamInt32Boolean">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.ReadAsync(System.IO.Stream,System.Int32,System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.ReadLineAsyncStreamEncodingInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.ReadLineAsync(System.IO.Stream,System.Text.Encoding,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.ReadLineAsyncStreamInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.ReadLineAsync(System.IO.Stream,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.ReportIProgressOfProgressStatusInt64Int64">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.Report(Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus},System.Int64,System.Int64)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsObservableStreamByteArrayInt32Int32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsObservable(System.IO.Stream,System.Byte[],System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncCoreStreamIObservableOfByteIProgressOfProgressStatusInt32Int32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsyncCore(System.IO.Stream,System.IObservable`1{System.Byte},Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus},System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamIEnumerableOfByteIProgressOfProgressStatusInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.Collections.Generic.IEnumerable`1{System.Byte},Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus},System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamIEnumerableOfByteInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.Collections.Generic.IEnumerable`1{System.Byte},System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamIObservableOfByteIProgressOfProgressStatusInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.IObservable`1{System.Byte},Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus},System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamIObservableOfByteInt32">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.IObservable`1{System.Byte},System.Int32)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamString">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.String)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamStringEncoding">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.String,System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamStringEncodingIProgressOfProgressStatus">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.String,System.Text.Encoding,Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteAsyncStreamStringIProgressOfProgressStatus">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteAsync(System.IO.Stream,System.String,Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteLineAsyncStreamIEnumerableOfString">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteLineAsync(System.IO.Stream,System.Collections.Generic.IEnumerable`1{System.String})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteLineAsyncStreamIEnumerableOfStringEncoding">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteLineAsync(System.IO.Stream,System.Collections.Generic.IEnumerable`1{System.String},System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteLineAsyncStreamIObservableOfString">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteLineAsync(System.IO.Stream,System.IObservable`1{System.String})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions.WriteLineAsyncStreamIObservableOfStringEncoding">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.WriteLineAsync(System.IO.Stream,System.IObservable`1{System.String},System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions._ReadAsyncCoreb__17ListOfByteByteArray">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.&lt;ReadAsyncCore&gt;b__17(System.Collections.Generic.List`1{System.Byte},System.Byte[])"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MStreamExtensions._ReadAsyncCoreb__18ListOfByte">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.StreamExtensions.&lt;ReadAsyncCore&gt;b__18(System.Collections.Generic.List`1{System.Byte})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.MUIDispatcherObservableExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.UIDispatcherObservableExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MUIDispatcherObservableExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MUIDispatcherObservableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MUIDispatcherObservableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MUIDispatcherObservableExtensions.ObserveOnUIUIDispatcherIObservableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.IObservable{``0},System.IObservable{``0}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.UIDispatcherObservableExtensions.ObserveOnUIUIDispatcher``1(System.IObservable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.MUIDispatcherObservableExtensions.SubscribeOnUIDispatcherIObservableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.IObservable{``0},System.IObservable{``0}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.UIDispatcherObservableExtensions.SubscribeOnUIDispatcher``1(System.IObservable`1{``0})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.MUIDispatcherObservableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Asynchronous.WebClientExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.RegisterAsyncEventWebClientFuncOfActionOfTEventArgsTDelegateActionOfTDelegateActionOfTDelegateFuncOfIDisposableAction``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Net.WebClient,System.Func{System.Action{``1},``0},System.Action{``0},System.Action{``0},System.Func{System.IDisposable},System.Action,System.IObservable{``1}})">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.RegisterAsyncEvent``2(System.Net.WebClient,System.Func`2{System.Action`1{``1},``0},System.Action`1{``0},System.Action`1{``0},System.Func`1{System.IDisposable},System.Action)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.DownloadDataObservableAsyncCoreWebClientUriIProgressOfDownloadProgressChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.DownloadDataObservableAsyncCore(System.Net.WebClient,System.Uri,Codeplex.Reactive.Notifier.IProgress`1{System.Net.DownloadProgressChangedEventArgs})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.DownloadDataObservableAsyncWebClientString">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.DownloadDataObservableAsync(System.Net.WebClient,System.String)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.DownloadDataObservableAsyncWebClientUri">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.DownloadDataObservableAsync(System.Net.WebClient,System.Uri)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.DownloadDataObservableAsyncWebClientUriIProgressOfDownloadProgressChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.DownloadDataObservableAsync(System.Net.WebClient,System.Uri,Codeplex.Reactive.Notifier.IProgress`1{System.Net.DownloadProgressChangedEventArgs})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.DownloadFileObservableAsyncWebClient">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.DownloadFileObservableAsync(System.Net.WebClient)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.DownloadStringObservableAsyncWebClient">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.DownloadStringObservableAsync(System.Net.WebClient)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.OpenReadObservableAsyncWebClient">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.OpenReadObservableAsync(System.Net.WebClient)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.OpenWriteObservableAsyncWebClient">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.OpenWriteObservableAsync(System.Net.WebClient)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.RegisterDownloadProgressWebClientIProgressOfDownloadProgressChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.RegisterDownloadProgress(System.Net.WebClient,Codeplex.Reactive.Notifier.IProgress`1{System.Net.DownloadProgressChangedEventArgs})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.RegisterUploadProgressWebClientIProgressOfUploadProgressChangedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.RegisterUploadProgress(System.Net.WebClient,Codeplex.Reactive.Notifier.IProgress`1{System.Net.UploadProgressChangedEventArgs})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.UploadDataObservableAsyncWebClient">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.UploadDataObservableAsync(System.Net.WebClient)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions.UploadFileObservableAsyncWebClient">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.UploadFileObservableAsync(System.Net.WebClient)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions._DownloadDataObservableAsyncCoreb__23ActionOfDownloadDataCompletedEventArgs">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.&lt;DownloadDataObservableAsyncCore&gt;b__23(System.Action`1{System.Net.DownloadDataCompletedEventArgs})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions._RegisterDownloadProgressb__6">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.&lt;RegisterDownloadProgress&gt;b__6"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebClientExtensions._RegisterUploadProgressb__14">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebClientExtensions.&lt;RegisterUploadProgress&gt;b__14"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Asynchronous.Moles.MWebRequestExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Asynchronous.WebRequestExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebRequestExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebRequestExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebRequestExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebRequestExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebRequestExtensions.GetRequestStreamAsObservableWebRequest">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebRequestExtensions.GetRequestStreamAsObservable(System.Net.WebRequest)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebRequestExtensions.GetResponseAsObservableWebRequest">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebRequestExtensions.GetResponseAsObservable(System.Net.WebRequest)"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions">
            <summary>Mole type of <see cref="T:Codeplex.Reactive.Asynchronous.WebResponseExtensions"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.DownloadDataAsyncWebResponse">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.DownloadDataAsync(System.Net.WebResponse)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.DownloadDataAsyncWebResponseIProgressOfProgressStatus">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.DownloadDataAsync(System.Net.WebResponse,Codeplex.Reactive.Notifier.IProgress`1{Codeplex.Reactive.Asynchronous.ProgressStatus})"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.DownloadStringAsyncWebResponse">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.DownloadStringAsync(System.Net.WebResponse)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.DownloadStringAsyncWebResponseEncoding">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.DownloadStringAsync(System.Net.WebResponse,System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.DownloadStringLineAsyncWebResponse">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.DownloadStringLineAsync(System.Net.WebResponse)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions.DownloadStringLineAsyncWebResponseEncoding">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.DownloadStringLineAsync(System.Net.WebResponse,System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions._DownloadDataAsyncb__2ListOfByteByteArray">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.&lt;DownloadDataAsync&gt;b__2(System.Collections.Generic.List`1{System.Byte},System.Byte[])"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.MWebResponseExtensions._DownloadDataAsyncb__3ListOfByte">
            <summary>Sets the mole of <see cref="M:Codeplex.Reactive.Asynchronous.WebResponseExtensions.&lt;DownloadDataAsync&gt;b__3(System.Collections.Generic.List`1{System.Byte})"/>
            </summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.SEventToReactive">
            <summary>Stub type of <see cref="T:Codeplex.Reactive.EventToReactive"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.CloneCore(System.Windows.Freezable)">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.CloneCoreFreezable">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.CloneCurrentValueCoreFreezable">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.CreateInstanceCore">
            <summary>Sets the stub of <see cref="M:System.Windows.Interactivity.TriggerAction.CreateInstanceCore"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.CreateInstanceCore01">
            <summary>Sets the stub of <see cref="M:System.Windows.Interactivity.TriggerAction.CreateInstanceCore"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.FreezeCore(System.Boolean)">
            <summary>Sets the stub of <see cref="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.FreezeCoreBoolean">
            <summary>Sets the stub of <see cref="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.GetAsFrozenCoreFreezable">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.GetCurrentValueAsFrozenCoreFreezable">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.InitializeStub">
            <summary>Initializes a new instance of type SEventToReactive</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.Invoke(System.Object)">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.EventToReactive.Invoke(System.Object)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.InvokeObject">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.EventToReactive.Invoke(System.Object)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.OnAttached">
            <summary>Sets the stub of <see cref="M:System.Windows.Interactivity.TriggerAction.OnAttached"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.OnAttached01">
            <summary>Sets the stub of <see cref="M:System.Windows.Interactivity.TriggerAction.OnAttached"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.OnChanged">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.OnChanged"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.OnChanged01">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.OnChanged"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.OnDetaching">
            <summary>Sets the stub of <see cref="M:System.Windows.Interactivity.TriggerAction.OnDetaching"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.OnDetaching01">
            <summary>Sets the stub of <see cref="M:System.Windows.Interactivity.TriggerAction.OnDetaching"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SEventToReactive.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SEventToReactive.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>Sets the stub of <see cref="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SEventToReactive.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SEventToReactive.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Codeplex.Reactive.Asynchronous.Moles.SProgressStatus">
            <summary>Stub type of <see cref="T:Codeplex.Reactive.Asynchronous.ProgressStatus"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.SProgressStatus.#ctor(System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.SProgressStatus.InitializeStub">
            <summary>Initializes a new instance of type SProgressStatus</summary>
        </member>
        <member name="M:Codeplex.Reactive.Asynchronous.Moles.SProgressStatus.ToString">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.Asynchronous.ProgressStatus.ToString"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Asynchronous.Moles.SProgressStatus.ToString01">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.Asynchronous.ProgressStatus.ToString"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.SProgressStatus.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Codeplex.Reactive.Asynchronous.Moles.SProgressStatus.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.SReactiveCollection`1">
            <summary>Stub type of <see cref="T:Codeplex.Reactive.ReactiveCollection`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveCollection`1.#ctor(System.IObservable{`0},System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveCollection`1.InitializeStub">
            <summary>Initializes a new instance of type SReactiveCollection</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SReactiveCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.ReactiveCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/>
            </summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SReactiveCollection`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SReactiveCollection`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.SReactiveCommand`1">
            <summary>Stub type of <see cref="T:Codeplex.Reactive.ReactiveCommand`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveCommand`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveCommand`1.#ctor(System.Func{`0,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveCommand`1.InitializeStub">
            <summary>Initializes a new instance of type SReactiveCommand</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SReactiveCommand`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SReactiveCommand`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Codeplex.Reactive.Moles.SReactiveProperty`1">
            <summary>Stub type of <see cref="T:Codeplex.Reactive.ReactiveProperty`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.#ctor(`0,Codeplex.Reactive.ReactivePropertyMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.#ctor(System.Action{`0},`0,Codeplex.Reactive.ReactivePropertyMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.Broadcast``1(``0,``0,System.String)">
            <summary>Sets the stub of <see cref="M:GalaSoft.MvvmLight.ViewModelBase.Broadcast``1(``0,``0,System.String)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.BroadcastTTString``1(Microsoft.Moles.Framework.MolesDelegates.Action{``0,``0,System.String})">
            <summary>Sets stubs of Broadcast(!!0 oldValue, !!0 newValue, String propertyName)</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.Cleanup">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Cleanup"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SReactiveProperty`1.Cleanup01">
            <summary>Sets the stub of <see cref="M:Codeplex.Reactive.ReactiveProperty`1.Cleanup"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.Dispose(System.Boolean)">
            <summary>Sets the stub of <see cref="M:GalaSoft.MvvmLight.ViewModelBase.Dispose(System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SReactiveProperty`1.DisposeBoolean">
            <summary>Sets the stub of <see cref="M:GalaSoft.MvvmLight.ViewModelBase.Dispose(System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.InitializeStub">
            <summary>Initializes a new instance of type SReactiveProperty</summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.RaisePropertyChanged(System.String)">
            <summary>Sets the stub of <see cref="M:GalaSoft.MvvmLight.ViewModelBase.RaisePropertyChanged(System.String)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.RaisePropertyChanged``1(System.String,``0,``0,System.Boolean)">
            <summary>Sets the stub of <see cref="M:GalaSoft.MvvmLight.ViewModelBase.RaisePropertyChanged``1(System.String,``0,``0,System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Codeplex.Reactive.Moles.SReactiveProperty`1.RaisePropertyChangedString">
            <summary>Sets the stub of <see cref="M:GalaSoft.MvvmLight.ViewModelBase.RaisePropertyChanged(System.String)"/>
            </summary>
        </member>
        <member name="M:Codeplex.Reactive.Moles.SReactiveProperty`1.RaisePropertyChangedStringTTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.String,``0,``0,System.Boolean})">
            <summary>Sets stubs of RaisePropertyChanged(String propertyName, !!0 oldValue, !!0 newValue, Boolean broadcast)</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SReactiveProperty`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Codeplex.Reactive.Moles.SReactiveProperty`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Codeplex.Reactive.Notifier.Moles.SScheduledNotifier`1">
            <summary>Stub type of <see cref="T:Codeplex.Reactive.Notifier.ScheduledNotifier`1"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.SScheduledNotifier`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.SScheduledNotifier`1.#ctor(System.Reactive.Concurrency.IScheduler)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.SScheduledNotifier`1.InitializeStub">
            <summary>Initializes a new instance of type SScheduledNotifier</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.SScheduledNotifier`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.SScheduledNotifier`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Codeplex.Reactive.Notifier.Moles.SSignalNotifier">
            <summary>Stub type of <see cref="T:Codeplex.Reactive.Notifier.SignalNotifier"/>
            .</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.SSignalNotifier.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Codeplex.Reactive.Notifier.Moles.SSignalNotifier.InitializeStub">
            <summary>Initializes a new instance of type SSignalNotifier</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.SSignalNotifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Codeplex.Reactive.Notifier.Moles.SSignalNotifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
    </members>
</doc>
