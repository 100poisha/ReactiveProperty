// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.IO;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace Codeplex.Reactive.Asynchronous
{
    public partial class StreamExtensionsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(StreamExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ReadAsObservableThrowsArgumentNullException394()
{
    IObservable<int> iObservable;
    iObservable = this.ReadAsObservable((Stream)null, (byte[])null, 0, 0);
}
[TestMethod]
[PexGeneratedBy(typeof(StreamExtensionsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ReadAsObservableThrowsArgumentNullException946()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      IObservable<int> iObservable;
      byte[] bs = new byte[0];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      iObservable = this.ReadAsObservable((Stream)memoryStream, (byte[])null, 0, 0);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(StreamExtensionsTest))]
public void ReadAsObservable493()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      IObservable<int> iObservable;
      byte[] bs = new byte[0];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[0];
      iObservable = this.ReadAsObservable((Stream)memoryStream, bs1, 0, 0);
      disposables.Dispose();
      Assert.IsNotNull((object)iObservable);
    }
}
[TestMethod]
[PexGeneratedBy(typeof(StreamExtensionsTest))]
[ExpectedException(typeof(ArgumentException))]
public void ReadAsObservableThrowsArgumentException927()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      IObservable<int> iObservable;
      byte[] bs = new byte[0];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[0];
      iObservable = this.ReadAsObservable((Stream)memoryStream, bs1, 254, 771);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(StreamExtensionsTest))]
[ExpectedException(typeof(ArgumentOutOfRangeException))]
public void ReadAsObservableThrowsArgumentOutOfRangeException99()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      IObservable<int> iObservable;
      byte[] bs = new byte[0];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[0];
      iObservable =
        this.ReadAsObservable((Stream)memoryStream, bs1, int.MinValue, 0);
      disposables.Dispose();
    }
}
    }
}
